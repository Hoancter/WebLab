{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hoann\\\\Documents\\\\code\\\\Practice_MSIS207\\\\In_Class\\\\Lab4\\\\Exercise1\\\\exercise1.5\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"typeface-roboto\";\nimport React, { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AndroidIcon from '@mui/icons-material/Android';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttonStyle = {\n  margin: 10\n};\nfunction toggleColor(setter, value) {\n  setter(value === \"default\" ? \"primary\" : \"default\");\n}\nexport default function App() {\n  _s();\n  const [contained, setContained] = useState(\"default\");\n  const [text, setText] = useState(\"default\");\n  const [outlined, setOutlined] = useState(\"default\");\n  const [icon, setIcon] = useState(\"default\");\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      component: Button,\n      variant: \"contained\",\n      style: buttonStyle,\n      color: contained,\n      onClick: () => toggleColor(setContained, contained),\n      children: \"Contained\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      component: Button,\n      style: buttonStyle,\n      color: text,\n      onClick: () => toggleColor(setText, text),\n      children: \"Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      component: Button,\n      variant: \"outlined\",\n      style: buttonStyle,\n      color: outlined,\n      onClick: () => toggleColor(setOutlined, outlined),\n      children: \"Outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      component: IconButton,\n      style: buttonStyle,\n      color: icon,\n      onClick: () => toggleColor(setIcon, icon),\n      children: /*#__PURE__*/_jsxDEV(AndroidIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 1\n  }, this);\n}\n_s(App, \"cr548nk4aiJGlEUZl8WFgsioX1c=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Button","Grid","IconButton","AndroidIcon","buttonStyle","margin","toggleColor","setter","value","App","contained","setContained","text","setText","outlined","setOutlined","icon","setIcon"],"sources":["C:/Users/hoann/Documents/code/Practice_MSIS207/In_Class/Lab4/Exercise1/exercise1.5/src/App.js"],"sourcesContent":["import\"typeface-roboto\"\r\nimport React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport AndroidIcon from '@mui/icons-material/Android';\r\nconst buttonStyle = { margin: 10 };\r\n\r\nfunction toggleColor(setter, value) {\r\n  setter (value === \"default\" ? \"primary\" : \"default\");\r\n}\r\nexport default function App() {\r\nconst [contained, setContained] = useState (\"default\") ;\r\nconst [text, setText] = useState (\"default\") ;\r\nconst [outlined, setOutlined] = useState (\"default\") ;\r\nconst [icon, setIcon] = useState(\"default\") ;\r\nreturn(\r\n<Grid container>\r\n  <Grid\r\n  item\r\n  component={Button}\r\n  variant=\"contained\"\r\n  style={buttonStyle}\r\n  color={contained}\r\n  onClick={() => toggleColor(setContained, contained) }\r\n  >\r\n  Contained\r\n</Grid >\r\n<Grid\r\n  item\r\n  component={Button}\r\n  style={buttonStyle}\r\n  color={text}\r\n  onClick={() => toggleColor(setText, text)}\r\n  >\r\n  Text\r\n  </Grid>\r\n  <Grid\r\n  item\r\n  component={Button}\r\n  variant=\"outlined\"\r\n  style={buttonStyle}\r\n  color={outlined}\r\n  onClick={() => toggleColor(setOutlined, outlined)}\r\n  >\r\n  Outlined\r\n  </Grid>\r\n  <Grid\r\n  item\r\n  component={IconButton}\r\n  style={buttonStyle}\r\n  color={icon}\r\n  onClick={() => toggleColor(setIcon, icon)}\r\n  >\r\n    <AndroidIcon/>\r\n  </Grid>\r\n  </Grid>\r\n);\r\n}"],"mappings":";;AAAA,OAAM,iBAAiB;AACvB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,WAAW,MAAM,6BAA6B;AAAC;AACtD,MAAMC,WAAW,GAAG;EAAEC,MAAM,EAAE;AAAG,CAAC;AAElC,SAASC,WAAW,CAACC,MAAM,EAAEC,KAAK,EAAE;EAClCD,MAAM,CAAEC,KAAK,KAAK,SAAS,GAAG,SAAS,GAAG,SAAS,CAAC;AACtD;AACA,eAAe,SAASC,GAAG,GAAG;EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAE,SAAS,CAAC;EACtD,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAE,SAAS,CAAC;EAC5C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAE,SAAS,CAAC;EACpD,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,SAAS,CAAC;EAC3C,oBACA,QAAC,IAAI;IAAC,SAAS;IAAA,wBACb,QAAC,IAAI;MACL,IAAI;MACJ,SAAS,EAAEC,MAAO;MAClB,OAAO,EAAC,WAAW;MACnB,KAAK,EAAEI,WAAY;MACnB,KAAK,EAAEM,SAAU;MACjB,OAAO,EAAE,MAAMJ,WAAW,CAACK,YAAY,EAAED,SAAS,CAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAG/C,eACR,QAAC,IAAI;MACH,IAAI;MACJ,SAAS,EAAEV,MAAO;MAClB,KAAK,EAAEI,WAAY;MACnB,KAAK,EAAEQ,IAAK;MACZ,OAAO,EAAE,MAAMN,WAAW,CAACO,OAAO,EAAED,IAAI,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGnC,eACP,QAAC,IAAI;MACL,IAAI;MACJ,SAAS,EAAEZ,MAAO;MAClB,OAAO,EAAC,UAAU;MAClB,KAAK,EAAEI,WAAY;MACnB,KAAK,EAAEU,QAAS;MAChB,OAAO,EAAE,MAAMR,WAAW,CAACS,WAAW,EAAED,QAAQ,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAG3C,eACP,QAAC,IAAI;MACL,IAAI;MACJ,SAAS,EAAEZ,UAAW;MACtB,KAAK,EAAEE,WAAY;MACnB,KAAK,EAAEY,IAAK;MACZ,OAAO,EAAE,MAAMV,WAAW,CAACW,OAAO,EAAED,IAAI,CAAE;MAAA,uBAExC,QAAC,WAAW;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACT;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAET;AAAC,GA/CuBP,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}